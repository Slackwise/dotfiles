#!/bin/sh
# vim: fdm=marker

#set -euo pipefail # For actual scripts, refuse failure!

# use [[ over test or [ commands. Rationale: https://google.github.io/styleguide/shell.xml?showone=Test,_%5B_and_%5B%5B#Test,_%5B_and_%5B%5B



# SCRIPT DEBUGGING UTILITIES ------------------------------------------------{{{
if [[ -z $bashrc_debug ]]; then
  bashrc_debug=false
fi
function debug
{
  $bashrc_debug && echo "[BASHRC DEBUG] $1"
}
debug "Starting bashrc debugging..."
#----------------------------------------------------------------------------}}}


# GLOBAL UTILITY VARIABLES --------------------------------------------------{{{
export LAMBDA=$'\u03BB'
export EDITOR=/usr/bin/vim
export DOTFILES=$HOME/src/dotfiles
debug "Global variables exported."
#----------------------------------------------------------------------------}}}


# SOURCE SYSTEM BASHRC ------------------------------------------------------{{{
debug "Sourcing system bashrc..."
if [[ -f ~/.bashrc.sys ]]; then
  source ~/.bashrc.sys
fi
debug "Sourced system bashrc."
#----------------------------------------------------------------------------}}}



# GLOBAL UTILITY FUNCTIONS --------------------------------------------------{{{
function command_exists
{
  if command -v $1 >/dev/null; then
    return 0
  else
    return 1
  fi
}

dreamhost_shared_hostname="elmonica"
if [[ $HOSTNAME == $dreamhost_shared_hostname ]]; then
  function http_errors
  {
    tail -n 50 -f "$HOME/logs/$1/http/error.log"
  }
fi
debug "Global functions read."
#----------------------------------------------------------------------------}}}


# LOCAL UTILITY VARIABLES ---------------------------------------------------{{{
if [[ $UID == 0 ]]; then
  is_root_user=true
fi

if [[ -n "$SSH_CONNECTION" ]]; then
  is_ssh_connection=true
fi

if [[ $LANG == "en_US.UTF-8" ]]; then
  is_unicode_term=true
fi

# Color Escapes
white_on_red="\[\e[41m\]"
green="\[\e[32m\]"
cyan="\[\e[36m\]"
neutre="\[\e[m\]" # Reset to neutral color

debug "Local variables read."
#----------------------------------------------------------------------------}}}


# BUILD UP A CUSTOM PROMPT --------------------------------------------------{{{
export PS1=""
function P
{
  export PS1=$PS1$1
}

# If root, highlight in bright red:
if [[ $is_root_user ]]; then
  P $white_on_red;
  debug "Is root user."
else
  debug "Not root user."
fi

if [[ "$USER" == "slackwise" ]]; then
  debug "Is user 'slackwise'."
else
  P "$cyan\u$neutre";
  debug "Not user 'slackwise'."
fi

# If connected to a machine via SSH, show the hostname:
if [[ $is_ssh_connection ]]; then
  P "$cyan@\H$neutre"
  debug "Is SSH connection."
else
  debug "Not SSH connection."
fi

P "\w" # Add full working directory

if [[ $is_unicode_term ]]; then
  P $green$LAMBDA$neutre
  debug "Is unicode terminal."
else
  P "$green\$$neutre"
  debug "Not unicode terminal."
fi

P " " # Add a trailing blank to give space for commands

if [[ $is_root_user ]]; then P $neutre; fi

unset -f P # Remove our temporary utility function
debug "Prompt created."
#----------------------------------------------------------------------------}}}


# CONSOLE CONFIG ------------------------------------------------------------{{{
# TODO: If a VT, run the next line:
# setterm -powersave off -blank 0
debug "Console config loaded."
#----------------------------------------------------------------------------}}}


# GUIX CONFIG ---------------------------------------------------------------{{{
GUIX_PROFILE=$HOME/.guix-profile
if [[ -a $GUIX_PROFILE ]]; then
  export GUIX_PROFILE
  export GUIX_LOCPATH="$GUIX_PROFILE/lib/locale${GUIX_LOCPATH:+:}$GUIX_LOCPATH"
  export PATH="$GUIX_PROFILE/bin:/root/.guix-profile/sbin${PATH:+:}$PATH"
  source $GUIX_PROFILE/etc/profile
  debug "Guix config loaded."
else
  debug "Guix config skipped."
fi
#----------------------------------------------------------------------------}}}


# RVM CONFIG ----------------------------------------------------------------{{{
if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  source "$HOME/.rvm/scripts/rvm"
  export PATH=$HOME/.rvm/bin:$PATH
  debug "RVM config loaded."
else
  debug "RVM config skipped."
fi
#----------------------------------------------------------------------------}}}


# DOOM EMACS CONFIG ---------------------------------------------------------{{{
if [[ -a $HOME/.emacs.d/bin/doom ]]; then
  export PATH=$HOME/.emacs.d/bin:$PATH
  debug "Doom Emacs config loaded."
else
  debug "Doom Emacs config skipped."
fi
#----------------------------------------------------------------------------}}}


# My personal PATH additions, which must precede all others:
export PATH=.:$HOME/.bin:$HOME/src/dotfiles/bin:$PATH


# Aliases:
alias update-ubuntu="sudo -s eval 'apt update && apt dist-upgrade -y'"
alias wsl-guix-daemon="sudo -s eval 'guix-daemon &'"
alias update-guix="wsl-guix-daemon && guix pull && guix upgrade"
alias update-emacs="doom sync ; cd $HOME/src/dotfiles && git pull ; cd $HOME/notes && git pull ; cd $HOME/notes/private && git pull"
alias update-wsl="update-ubuntu ; update-guix ; update-emacs"


export Sw_BASHRC_READ=true # To know that my personal bashrc was read fully!
debug "bashrc finished processing."
unset -f debug
