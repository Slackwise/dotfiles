#!/usr/bin/env ruby

# This script is supposed to bootstrap my Vim config on a new machine. It
# should ideally only be run once, with only needing Git pulls to maintain.

HOME = ENV['HOME']
VIM_HOME = HOME + '/src/dotfiles/vim/'
VIMRC = VIM_HOME + 'vimrc'
VIMDIR = HOME + '/.vim/'
VUNDLE = 'https://github.com/gmarik/vundle.git'

WIN_VIMRC = <<WIN_VIMRC_END
let $MYVIMRC="~/src/dotfiles/vim/vimrc"
source $MYVIMRC
WIN_VIMRC_END

CURL = <<CURLEND
@rem Do not use "echo off" to not affect any child calls.
@setlocal

@rem Get the abolute path to the parent directory, which is assumed to be the
@rem Git installation root.
@for /F "delims=" %%I in ("%~dp0..") do @set git_install_root=%%~fI
@set PATH=%git_install_root%\\bin;%git_install_root%\\mingw\\bin;%PATH%

@if not exist "%HOME%" @set HOME=%HOMEDRIVE%%HOMEPATH%
@if not exist "%HOME%" @set HOME=%USERPROFILE%

@curl.exe %*
CURLEND


def windows_setup
  # Install a redirecting vimrc file in $HOME.
  begin # FIXME: Getting a permission error.
    File.open(HOME + '/_vimrc', 'w+') do |f|
      f.puts WIN_VIMRC
    end
    puts 'Created _vimrc.'
  rescue
    puts "Failed to create _vimrc:\n#$!"
  end

  puts 'Setup complete'
  puts 'Closing automatically in 10 seconds...'
  sleep 10
end

def nixie_setup
  begin
    File.symlink(VIMRC, HOME + '/.vimrc')
    puts 'Symlinked vimrc file.'
  rescue
    puts "vimrc symlink failed: #$!"
  end

  puts 'Setup complete.'
end


def is_admin?
  if ARGV.include? '--admin'
    true
  else
    false
  end
end

def calling_method
  caller[-2].match(/`(\w+)'$/)[1]
end

def restart_as_admin
  require 'win32ole'
  WIN32OLE.new('Shell.Application').ShellExecute(
	'ruby.exe', File::expand_path(__FILE__) + ' --admin',
	nil, 'runas', 1)
end

desc 'Make required directories.'
task :make_dirs do
  begin
    Dir.mkdir(VIMDIR)
    Dir.mkdir(VIMDIR + 'swap')
    Dir.mkdir(VIMDIR + 'backup')
    puts 'Created Vim directories.'
  rescue
    puts "Failed to create directories: #$!"
  end
end

desc "Install Vundle and Vundle'd plugins."
task :vundle do
  # FIXME: Find or setup Git for Windows. I don't know. :(
  # Do initial Vundle repo clone.
  unless Dir.exists? "#{HOME}/.vim/bundle/vundle/.git/"
    if system(%|git clone #{VUNDLE} "#{HOME}/.vim/bundle/vundle"|)
      puts 'Succesfully cloned Vundle repo.'
    else
      puts 'Failed to clone Vundle repo!'
      sleep 30
      exit 1
    end
  else
    puts 'Vundle appears to already be installed.'
  end
end

desc 'Install Vim config.'
task :default => [:make_dirs] do
  case RUBY_PLATFORM
  when /linux/, /darwin/
    nixie_setup
  when /mswin/, /mingw32/
    windows_setup
    # if is_admin?
    #   windows_setup
    # else
    #   restart_as_admin
    # end
  end
end
