#!/usr/bin/env ruby

# This script is supposed to bootstrap my Vim config on a new machine. It
# should ideally only be run once, with only needing Git pulls to maintain.

HOME      = ENV['HOME']
VIM_HOME  = HOME + '/src/dotfiles/vim/'
VIMRC     = VIM_HOME + 'vimrc'
VIMDIR    = HOME + '/.vim/'
VUNDLE    = "https://github.com/gmarik/vundle.git"

WIN_VIMRC = <<WIN_VIMRC_END
let $MYVIMRC="~/src/dotfiles/vim/vimrc"
source $MYVIMRC
WIN_VIMRC_END

def is_windows?
  RUBY_PLATFORM.match(/mswin/) || RUBY_PLATFORM.match(/mingw32/)
end

def windows_setup
  # Install a redirecting vimrc file in $HOME.
  begin
    File.open(HOME + '/_vimrc', 'w+') do |f|
      f.puts WIN_VIMRC
    end
    puts "Created _vimrc."
  rescue
    puts "Failed to create _vimrc:\n#$!"
  end

  puts "Setup complete"
  puts "Closing automatically in 10 seconds..."
  sleep 10
end

def nix_setup
  File.symlink(VIMRC, HOME + '/.vimrc')
  puts "Symlinked vimrc file."
rescue
  puts "vimrc symlink failed: #$!"
end

desc "Make required directories."
task :make_dirs do
  begin
    Dir.mkdir(VIMDIR)
    Dir.mkdir(VIMDIR + 'swap')
    Dir.mkdir(VIMDIR + 'backup')
    puts "Created Vim directories."
  rescue
    puts "Failed to create directories: #$!"
  end
end

desc "Install Vundle and Vundle'd plugins."
task :vundle do
  # Do initial Vundle repo clone.
  unless File.exists? "#{HOME}/.vim/bundle/vundle/.git/"
    if system(%|git clone #{VUNDLE} "#{HOME}/.vim/bundle/vundle"|)
      puts "Succesfully cloned Vundle repo."
    else
      puts "Failed to clone Vundle repo!"
      sleep 30
      exit 1
    end
  else
    puts "Vundle appears to already be installed."
  end
end

desc "Clean up all Vim configuration files."
task :clean do
  if is_windows?
    prefix = ?_
  else
    prefix = ?.
  end
  FileUtils.rm_rf(VIMDIR)
  FileUtils.rm("#{HOME}/#{prefix}vimrc")
  FileUtils.rm("#{HOME}/#{prefix}viminfo")
end

desc "Install Vim config."
task :default => [:make_dirs] do
  if is_windows?
    windows_setup
  else
    nix_setup
  end
end
